
import { Quote } from '@/types/Quote';
import { Request } from '@/types/Request';

export const createMinimalRequestForQuote = (quote: Quote): Request => {
  // Generate a more unique ID with timestamp to prevent conflicts
  const timestamp = Date.now();
  const requestId = `auto-request-${quote.id}-${timestamp}`;
  
  return {
    id: requestId,
    clientId: quote.clientId,
    title: `Quote Request - ${quote.quoteNumber}`,
    serviceDetails: quote.notes || 'Auto-generated request for quote',
    requestDate: quote.createdDate,
    status: 'New',
    notes: `Auto-generated request for quote ${quote.quoteNumber}`,
  };
};

export const generateRequestIdForQuote = (quoteId: string): string => {
  // Include timestamp to ensure uniqueness
  const timestamp = Date.now();
  return `auto-request-${quoteId}-${timestamp}`;
};

// NEW: Helper to check if a request ID is auto-generated
export const isAutoGeneratedRequestId = (requestId: string): boolean => {
  return requestId.startsWith('auto-request-');
};

// NEW: Helper to extract quote ID from auto-generated request ID
export const extractQuoteIdFromAutoRequest = (requestId: string): string | null => {
  if (!isAutoGeneratedRequestId(requestId)) return null;
  
  const parts = requestId.split('-');
  if (parts.length >= 3) {
    // Handle both old format (auto-request-quoteId) and new format (auto-request-quoteId-timestamp)
    return parts[2];
  }
  return null;
};
